package merkle_examples_test

import (
	"fmt"

	"github.com/muxxer/iota.go/consts"
	"github.com/muxxer/iota.go/merkle"
	"github.com/muxxer/iota.go/trinary"
)

// i req: seed, The seed from which the Merkle tree was derived.
// i req: leafIndex, The Merkle tree leaf index to be used for signing
// i req: securityLvl, The used security level.
// i req: hashToSign, The hash to be signed.
// i: spongeFunc, The optional sponge function to use.
// o: []Trytes, The tryte representation of the signature fragments.
// o: error, Returned for internal errors.
func ExampleSignatureFragments() {
	seed := "ZLNM9UHJWKTTDEZOTH9CXDEIFUJQCIACDPJIXPOWBDW9LTBHC9AQRIXTIHYLIIURLZCXNSTGNIVC9ISVB"

	fragments, err := merkle.SignatureFragments(seed, 0, consts.SecurityLevelMedium, "VAJOHANFEOTRSIPCLG9MIPENDFPLQQUGSBLBHMKZ9XVCUSWIKJOOHSPWJAXVLPTAKMPURYAYD9ONODVOW")
	if err != nil {
		// handle error
		return
	}

	fmt.Println(fragments[0])
	fmt.Println(fragments[1])
	// output:
	// BGAJJQXKXJGCPRWYIAHYRIHZVGOTTKHXESOFDAFGKDY9MUJDTFPNPTYSM99LKOBYRO9JEIFWQPYKAKSJZYZCPMACLXWDKFCT9REZDIRQPHTDW9CWLWYSZN9ZLWX9CSOTBJ9NVUTDBCDPIDXHGCHIFGKKSVRBGLEWUYULGLZIUGGLDXKFVYLUTXPURQKGNJKLHRRJBBGRXYKIARYNLNOSSBKHEZWNO9VB9GPDISXGPRTPTLRYFPYNKPCSXMHHMP9QSLQDIV9SXKEGVCYNDOVWQTMYWCLSYYLVZYAQXIXMVRNWSPTVFE9TDSMSCRUQVSKMK9ZWOVNTU9NSSJQGAXGUORCJVMFXPNJYANLMNRXTOIPR9SEJXUZDPDIREHVVCCJPIWFWUWNRWQDBURLECQMFWRJQIXTCFAXMHZFFQAGMCJRVSBR9COUFILNOEQTNLMJMPQJORSFBNWFZTJUCJNRLQTSOKRXCARZTJKBKUX9IUNFTHCMDWCWPJDCTTJLH9NPDMQIVPJM9VWKMQKFUXEIMUHZZEV9FHPFQCBHMDKLNQNAHHDBRYHKZITDBSYIANCDYBB9KHMOMC9UMQBYWQEKMMPJCXJKI9MJBJJQNLIGYSMXPLZVIHCMAXQTU99SOXAPJJHCYYUH9XMZYCSMRPAWKNHNC9RONBQG9DVTHLFQWOPQXBR9MRQXDJ9VUGGGNAKUYJWVBFUTFRABXNZYYVBXPKNGJ9VW9ZDWFCVR9GWPZEAZITGGYJZJYL9YJENSMTBVHLGGZACTRCAAOYAHXVPOAFSCJDIHGBIOBACHBHFCB9ZRRHRVFWFUSFQIWTYCVUSPJSKDETGVJRFRHRMNPAKUJPVLJAYSDHDWHXYVCK9JPIWGNPEDIXBZSJV9ESGBKSOZEMGZMGODBQABHBPFYQQSQZKVJAFMVPMNTYPMUUJRIFHDCGTTUXPMIFQLOWRVHGXENLTUQKRD9QMOC9A9LRYELWWUYNUELZNOCPHGGZPZVDKXTYTTSYNGWKIGVRVHNWJJWDLZBUNOCIHCWJJQGYMQGASWLDJKDYCQKIGTTPOPLADNHR9RWQGNOUSSLBWESKFXEWGWWSESQNGLRFBYEWUQGLLUGAAFGHZKRGXMDFTLHCWWJMDAPM9RAXQPSNTKOX9QRJPJSTMPYVYXVHMHUQPPNVIJ9Z9MXXJEAHDDSCFQVUYOCYJBGRCGWWYJNASOVVEXTBGYLMSBYQORUTPOWO9POYL9OQVIQMYBSNNHDAGYXWQYQTHGDZGB9UZBV9TZWHHOFWGEUHSCTQKCOXCLZUOPUYFFGBDWFRXQCGUPNW9HEEDJHXSLCMFMG9LQUTKFSYIURSREYGHMVJ9FTTRY9MWLRLONWBJWUOTOLZYWJLXOCKBTRPQNGCTIIFRH9TVXTOD9CWWDHPQYEETERKGBGGCYGVIWLJVEYWCKXDXWWTJSKEVFHAQOGPXDBVLOMOHRUXCIEQOKITDZEPGYNS9RZIHHEOPUYMILSHMUUGNZCWTRXVHJXEHUDCNIHGGEGLLCTPDISPBDJORVQZOOREGBKNZJYGLYMFQGRNPZGHMTBUJHDJZZEJOVVDWWKCLQCVRFHXBCRMOSZSRAGAFQTVYEDWSNBSI9YPBDFHHNJNFKGRVKZXBIACWNQISZZMNRCAFJGDGSOTG9DVUGTRCJBDEXPEO9ESKHEPTYKIWOAQLDAXNQCFU9DZ9MSZREVYE9DUWYCBPEZKRJDIKLRFBXUTIGG9LMMLNGXZQSSRICNALTTCRUNAFCFMNEGAPYTJWPMELWTZAYYEMKSVHTJZ9QTWMXWRKGBJYJYOPRPRLPENVMKVSJPQXFGMMNIQGQ9AQIV9HHJGWMXUDWCWL9LP9TCJ9FIDBDCDROJRGGDIQEYCIONCSYOOMPI9DSHIFJHEXMEBUNFHRJTSAUDACXEMPSUMYFDUHHHEFLCIDFUDMPDGWXAGOWXXQNWT9FQURAZOPMJRYTSCMTRROXJHCATMYOOZEZGDJSPYWUGCPTSHZIRQAHNBSL9XJTITYRGXJMDQRA9KL9EYZMKBWGDN9JHXVKWJBKTPQQW9CRQQJLKLCQOS9LJOOIPWRNIBTLXYDESKBEDXXNNVJGLPBEOMSYSVYUOSDLADZWTRPAIHS99TUTDSOOTCNHWJZBAAOXPXAHEQSQ9TMOWJCKR9FCLGHB9NJD
	
}

// i req: expectedRoot, The Merkle tree root to validate against.
// i req: leafIndex, The Merkle tree leaf index to validate against.
// i reg: auditPath: The Merkle tree audit path to validate against.
// i req: fragments, The signed signature fragments.
// i req: hashToSign, The hash which was signed.
// i: spongeFunc, The optional sponge function to use.
// o: bool, Whether the signatures are valid.
// o: error, Returned for internal errors.
func ExampleValidateSignatureFragments() {
	root := "ZQGHPVTRKSLHSUFPBDHERZKNAKUAIYVQYKNOAIZPDMUGAQUXIXMDTFQQQXXQTHPD9SVQBACAPCGTSSRMY"
	auditPath := []trinary.Trytes{
		"LOVEPTI9KJLPOKKLOSPYJIVKZXJFMR9JOXMEUEYBPQVWPROGPTIQZIOTQVYCZCDKDJXJHSSSBHSFWFDBZ",
		"RQDHTRCOVMZCLC9SHJDOKMFRMSVJRAIGOBPJXK9CKGHCECFSRPIHWNNWQVQXIBWNG9XRVAYYYXWHPGQOX",
	}
	fragments := []trinary.Trytes{
		
		
	}
	hashToSign := "VAJOHANFEOTRSIPCLG9MIPENDFPLQQUGSBLBHMKZ9XVCUSWIKJOOHSPWJAXVLPTAKMPURYAYD9ONODVOW"

	valid, err := merkle.ValidateSignatureFragments(root, 0, auditPath, fragments, hashToSign)
	if err != nil {
		// handle error
		return
	}

	fmt.Println(valid)
	// output: true
}
