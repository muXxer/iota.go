package key_examples_test

import (
	"fmt"

	"github.com/muxxer/iota.go/consts"
	"github.com/muxxer/iota.go/kerl"
	"github.com/muxxer/iota.go/signing/key"
	"github.com/muxxer/iota.go/trinary"
)

// i req: entropy, The data from which to derive the private key.
// i req: securityLevel, The used security level.
// o: Trits, The Trits representation of the private key.
// o: error, Returned for internal errors.
func ExampleShake() {
	subseed := "CEFLDDLMF9TO9ZLLTYXIPVFIJKAOFRIQLGNYIDZCTDYSWMNXPYNGFAKHQDY9ABGGQZHEFTXKWKWZXEIUD"
	entropy := trinary.MustTrytesToTrits(subseed)
	privKey, err := key.Shake(entropy, consts.SecurityLevelMedium)
	if err != nil {
		// handle error
		return
	}
	fmt.Println(trinary.MustTritsToTrytes(privKey))
	// output
}

// i req: entropy, The entropy from which to derive the private key.
// i req: securityLevel, The used security level.
// i: spongeFunc, The ternary sponge function to use.
// o: Trits, The Trits representation of the private key.
// o: error, Returned for internal errors.
func ExampleSponge() {
	subseed := "CEFLDDLMF9TO9ZLLTYXIPVFIJKAOFRIQLGNYIDZCTDYSWMNXPYNGFAKHQDY9ABGGQZHEFTXKWKWZXEIUD"
	entropy := trinary.MustTrytesToTrits(subseed)
	privKey, err := key.Sponge(entropy, consts.SecurityLevelMedium, kerl.NewKerl())
	if err != nil {
		// handle error
		return
	}
	fmt.Println(trinary.MustTritsToTrytes(privKey))
	// output
}
